name: Build the library
on: [push, pull_request]
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    name: Build the plugin
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install dependencies on ubuntu
        run: |
          sudo apt update && sudo apt install -y ninja-build build-essential git python3 wget

      - name: Install latest cmake
        run: |
          wget https://github.com/Kitware/CMake/releases/download/v3.22.1/cmake-3.22.1-linux-x86_64.sh -qO /tmp/cmake-install.sh \
            && sudo chmod u+x /tmp/cmake-install.sh \
            && sudo /tmp/cmake-install.sh --skip-license --prefix=/usr/local \
            && rm /tmp/cmake-install.sh

      - name: Install slurm
        env:
          SLURM_VERSION: slurm-21-08-3-1
        run: |
          git clone -b ${SLURM_VERSION} --depth=1 https://github.com/SchedMD/slurm.git
          cd slurm
          ./configure
          sudo cp -r ./slurm /usr/local/include

      - name: Configure
        run: |
          mkdir build && cd build
          mkdir artifacts
          cmake .. -G "Ninja" -DCMAKE_INSTALL_PREFIX=artifacts

      - name: Compiling
        working-directory: build
        run: |
          ninja -j$(nproc)

      - name: Installing
        working-directory: build
        run: |
          ninja install

  build-with-docker:
    name: Build the plugin with docker
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        tag: ['18.04', '20.04', '22.04']
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Build
        run: docker build . -t spank_report --build-arg ubuntu_version=${{ matrix.tag }}
