name: Build the library
on: [push, pull_request]
jobs:
  build-deb:
    name: Build the plugin on Ubuntu
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        tag:
          - image: '18.04'
          - image: '20.04'
          - image: '22.04'
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          context: .
          file: ./Dockerfile.deb
          platforms: linux/amd64
          tags: spank-report
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            ubuntu_version=${{ matrix.tag.image }}

      - name: Fetch artifacts
        run: |
          sudo mkdir -p /artifacts
          sudo docker run -v /artifacts:/out --rm spank-report sh -c "cp /artifacts/* /out/"
          ls -la /artifacts

      - uses: actions/upload-artifact@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: deb-${{ matrix.tag.image }}
          path: /artifacts/*.deb

  build-rpm:
    name: Build and export the plugin on Rocky
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        tag:
          - image: '8.5'
            export_url: S3_URL_ROCKY8
          - image: '9.0'
            export_url: S3_URL_ROCKY9
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          context: .
          file: ./Dockerfile.rpm
          platforms: linux/amd64
          tags: spank-report
          load: true
          target: builder
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            rocky_version=${{ matrix.tag.image }}

      - name: Test
        uses: docker/build-push-action@v2
        id: docker_test
        with:
          context: .
          file: ./Dockerfile.rpm
          platforms: linux/amd64
          tags: spank-report-test
          target: tester
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            rocky_version=${{ matrix.tag.image }}

      - name: Fetch artifacts
        run: |
          sudo mkdir -p /artifacts
          sudo docker run -v /artifacts:/out --rm spank-report sh -c "cp /artifacts/* /out/"
          ls -la /artifacts

      - uses: actions/setup-python@v4
        if: startsWith(github.ref, 'refs/tags/')
        with:
          python-version: '3.x'

      - name: Install s3cmd
        if: startsWith(github.ref, 'refs/tags/')
        run: pip install s3cmd

      - name: Upload to s3
        # Do not use an preconfigured github actions to avoid pipeline attacks
        if: startsWith(github.ref, 'refs/tags/')
        env:
          S3_CFG: '${{ secrets.S3_CFG }}'
          S3_URL: '${{ secrets[matrix.tag.export_url] }}'
        run: |
          echo "${S3_CFG}" | sudo tee /.s3cfg
          s3cmd sync -v --acl-public --config="/.s3cfg" /artifacts/ "${S3_URL}"
